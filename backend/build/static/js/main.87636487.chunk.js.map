{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","background","position","bottom","textAlign","width","padding","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","console","log","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87636487.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n  // console.log(toggleImportance)\r\n\r\n  // console.log(note)\r\n    return(\r\n      <li className = 'note'>\r\n         {note.content}\r\n         <button onClick= {toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n }\r\n\r\n export default Note;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: ' This note is not saved to server',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true,\r\n  };\r\n  return request.then(response => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default { getAll, create, update };\r\n","import React from 'react';\r\n\r\n\r\nconst Notification = ({message}) => {\r\n\r\n    if(message === null){\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <div className = 'error'>\r\n            {message} \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: '1rem',\r\n        background: '#121212',\r\n        position: 'fixed',\r\n        bottom:0,\r\n        textAlign: 'center',\r\n        width: '100vw',\r\n        padding: '1rem'\r\n    }\r\n\r\n    return(\r\n       <div style = {footerStyle}>\r\n          <br/>\r\n          <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n       </div>   \r\n    )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  // console.log('render', notes.length, 'notes');\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    console.log('CHANGED:', changedNote);\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n        console.log('Returned Note-1', returnedNote);\n        /*\n    ! The map method HERE ðŸ‘† creates a new array by mapping every item from the old array into an item in the new array. In our example, the new array is created conditionally so that if note.id !== id is true, we simply copy the item from the old array into the new array. If the condition is false, then the note object returned by the server is added to the array instead.\n    */\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${note.content}' was already deleted from server`);\n        // alert(`The note '${note.content}' was already deleted from server`)\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  // ! we NOT need to call the event.prevetDefault() method here. This is because there is no default action that occurs on input change, unlike on a form submission.\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>show {showAll ? 'important' : 'all'}</button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type='submit'>save</button>\n      </form>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../src/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}